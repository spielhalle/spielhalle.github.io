{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///node_modules/@donmahallem/sudoku/dist/esm/index.js","webpack:///src/app/routes/sudoku/modules/sudoku-benchmark/component/sudoku-benchmark-message.ts","webpack:///src/app/routes/sudoku/modules/sudoku-benchmark/component/sudoku-benchmark.worker.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","COVER_START_IDX","BOARD_START_IDX","CONSTRAINTS","EMPTY_CELL","CELL_VALUE_MIN","checkConstraint","board","row","constraint","column","checkBoxConstraint","boardSize","boxSize","Array","fill","subsectionRowStart","Math","floor","subsectionRowEnd","subsectionColumnStart","subsectionColumnEnd","checkColumnConstraint","checkRowConstraint","isValid","solve","k","createEmptySudokuBoard","map","DancingNode","columnNode","left","right","top","bottom","node","ColumnNode","size","removeLeftRight","j","removeTopBottom","reinsertTopBottom","reinsertLeftRight","DLX","cover","isDone","header","createDLXList","grid","nbColumns","length","headerNode","columnNodes","push","linkRight","aGrid","prev","undefined","col","newNode","linkDown","min","Number","MAX_VALUE","ret","anser","field","parseSolution","resultCallback","answer","result","rcNode","parseInt","tmp","val","ans1","ans2","num","handleSolution","selectColumnNodeHeuristic","search","splice","uncover","cb","getIndex","createBoxConstraints","matrix","headerIter","rowDelta","columnDelta","index","createCellConstraints","createColumnConstraints","iterHeader","createRowConstraints","coverBoard","hBase","createCoverMatrix","coverMatrix","initializeExactCoverBoard","solve$1","dlx","runSolver","solveNum","results","indexMap","getIndexMap","idx","createSudokuBoard","retainPercentage","sqrt","randomNumbers","sort","random","selectBoard","removeIndexes","removeX","removeY","SudokuBenchmarkMessageType","reportStatus","status","self","postMessage","addEventListener","evt","data","type","STARTING","startTime","Date","now","lastResult","tDelta","time","PROGRESS","endTime","RESULT"],"mappings":"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","file":"benchmarkSudokuWorker-es5.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"ZPDc\");\n","/**!\n * Source https://github.com/donmahallem/js-libs Package: sudoku\n */\nconst COVER_START_IDX = 1;\nconst BOARD_START_IDX = 0;\nconst CONSTRAINTS = 4;\nconst EMPTY_CELL = 0;\nconst CELL_VALUE_MIN = 1;\n\n/**!\n * Source https://github.com/donmahallem/js-libs Package: sudoku\n */\nconst checkConstraint = (board, row, constraint, column) => {\n    if (board[row][column] !== EMPTY_CELL) {\n        if (!constraint[board[row][column] - 1]) {\n            constraint[board[row][column] - 1] = true;\n        }\n        else {\n            return false;\n        }\n    }\n    return true;\n};\n\n/**!\n * Source https://github.com/donmahallem/js-libs Package: sudoku\n */\nconst checkBoxConstraint = (board, row, column, boardSize, boxSize) => {\n    const constraint = new Array(boardSize).fill(false);\n    const subsectionRowStart = Math.floor(row / boxSize) * boxSize;\n    const subsectionRowEnd = subsectionRowStart + boxSize;\n    const subsectionColumnStart = Math.floor(column / boxSize) * boxSize;\n    const subsectionColumnEnd = subsectionColumnStart + boxSize;\n    for (let r = subsectionRowStart; r < subsectionRowEnd; r++) {\n        for (let c = subsectionColumnStart; c < subsectionColumnEnd; c++) {\n            if (!checkConstraint(board, r, constraint, c))\n                return false;\n        }\n    }\n    return true;\n};\n\n/**!\n * Source https://github.com/donmahallem/js-libs Package: sudoku\n */\nconst checkColumnConstraint = (board, column, boardSize) => {\n    const constraint = new Array(boardSize).fill(false);\n    for (let row = BOARD_START_IDX; row < boardSize; row++) {\n        if (!checkConstraint(board, row, constraint, column)) {\n            return false;\n        }\n    }\n    return true;\n};\n\n/**!\n * Source https://github.com/donmahallem/js-libs Package: sudoku\n */\nconst checkRowConstraint = (board, row, boardSize) => {\n    const constraint = new Array(boardSize).fill(false);\n    for (let column = BOARD_START_IDX; column < boardSize; column++) {\n        if (!checkConstraint(board, row, constraint, column)) {\n            return false;\n        }\n    }\n    return true;\n};\n\n/**!\n * Source https://github.com/donmahallem/js-libs Package: sudoku\n */\nconst isValid = (board, row, column, boardSize, boxSize) => {\n    return checkRowConstraint(board, row, boardSize) &&\n        checkColumnConstraint(board, column, boardSize) &&\n        checkBoxConstraint(board, row, column, boardSize, boxSize);\n};\n\n/**!\n * Source https://github.com/donmahallem/js-libs Package: sudoku\n */\nconst solve = (board, boardSize, boxSize) => {\n    for (let row = BOARD_START_IDX; row < boardSize; row++) {\n        for (let column = BOARD_START_IDX; column < boardSize; column++) {\n            if (board[row][column] === EMPTY_CELL) {\n                for (let k = CELL_VALUE_MIN; k <= boardSize; k++) {\n                    board[row][column] = k;\n                    if (isValid(board, row, column, boardSize, boxSize) && solve(board, boardSize, boxSize)) {\n                        return true;\n                    }\n                    board[row][column] = EMPTY_CELL;\n                }\n                return false;\n            }\n        }\n    }\n    return true;\n};\n\n/**!\n * Source https://github.com/donmahallem/js-libs Package: sudoku\n */\nconst createEmptySudokuBoard = (boardSize) => {\n    return new Array(boardSize)\n        .fill(0)\n        .map(() => new Array(boardSize).fill(EMPTY_CELL));\n};\n\n/**!\n * Source https://github.com/donmahallem/js-libs Package: sudoku\n */\n// tslint:disable:max-classes-per-file\nclass DancingNode {\n    constructor(columnNode) {\n        this.left = this;\n        this.right = this;\n        this.top = this;\n        this.bottom = this;\n        this.column = columnNode;\n    }\n    linkDown(node) {\n        node.bottom = this.bottom;\n        node.bottom.top = node;\n        node.top = this;\n        this.bottom = node;\n        return node;\n    }\n    linkRight(node) {\n        node.right = this.right;\n        node.right.left = node;\n        node.left = this;\n        this.right = node;\n        return node;\n    }\n    removeLeftRight() {\n        this.left.right = this.right;\n        this.right.left = this.left;\n    }\n    reinsertLeftRight() {\n        this.left.right = this;\n        this.right.left = this;\n    }\n    removeTopBottom() {\n        this.top.bottom = this.bottom;\n        this.bottom.top = this.top;\n    }\n    reinsertTopBottom() {\n        this.top.bottom = this;\n        this.bottom.top = this;\n    }\n}\nclass ColumnNode extends DancingNode {\n    constructor(name) {\n        super();\n        this.name = name;\n        this.size = 0;\n        this.column = this;\n    }\n    cover() {\n        this.removeLeftRight();\n        for (let i = this.bottom; i !== this; i = i.bottom) {\n            for (let j = i.right; j !== i; j = j.right) {\n                j.removeTopBottom();\n                j.column.size--;\n            }\n        }\n    }\n    uncover() {\n        for (let i = this.top; i !== this; i = i.top) {\n            for (let j = i.left; j !== i; j = j.left) {\n                j.column.size++;\n                j.reinsertTopBottom();\n            }\n        }\n        this.reinsertLeftRight();\n    }\n}\n\n/**!\n * Source https://github.com/donmahallem/js-libs Package: sudoku\n */\nclass DLX {\n    constructor(cover, boardSize) {\n        this.boardSize = boardSize;\n        this.isDone = false;\n        this.header = this.createDLXList(cover);\n    }\n    createDLXList(grid) {\n        const nbColumns = grid[0].length;\n        let headerNode = new ColumnNode('header');\n        const columnNodes = [];\n        for (let i = 0; i < nbColumns; i++) {\n            const n = new ColumnNode(`${i}`);\n            columnNodes.push(n);\n            headerNode = headerNode.linkRight(n);\n        }\n        headerNode = headerNode.right.column;\n        for (const aGrid of grid) {\n            let prev = undefined;\n            for (let j = 0; j < nbColumns; j++) {\n                if (aGrid[j]) {\n                    const col = columnNodes[j];\n                    const newNode = new DancingNode(col);\n                    // tslint:disable-next-line:triple-equals\n                    if (prev == undefined) {\n                        prev = newNode;\n                    }\n                    col.top.linkDown(newNode);\n                    prev = prev.linkRight(newNode);\n                    col.size++;\n                }\n            }\n        }\n        headerNode.size = nbColumns;\n        return headerNode;\n    }\n    selectColumnNodeHeuristic() {\n        let min = Number.MAX_VALUE;\n        // tslint:disable-next-line:no-unnecessary-initializer\n        let ret = undefined;\n        for (let c = this.header.right; c !== this.header; c = c.right) {\n            if (c.size < min) {\n                min = c.size;\n                ret = c;\n            }\n        }\n        return ret;\n    }\n    handleSolution(anser) {\n        const field = this.parseSolution(anser);\n        this.isDone = this.resultCallback(field);\n    }\n    parseSolution(answer) {\n        const result = createEmptySudokuBoard(this.boardSize);\n        for (const n of answer) {\n            let rcNode = n;\n            let min = parseInt(rcNode.column.name, 10);\n            for (let tmp = n.right; tmp !== n; tmp = tmp.right) {\n                const val = parseInt(tmp.column.name, 10);\n                if (val < min) {\n                    min = val;\n                    rcNode = tmp;\n                }\n            }\n            const ans1 = parseInt(rcNode.column.name, 10);\n            const ans2 = parseInt(rcNode.right.column.name, 10);\n            const r = Math.floor(ans1 / this.boardSize);\n            const c = ans1 % this.boardSize;\n            const num = (ans2 % this.boardSize) + 1;\n            result[r][c] = num;\n        }\n        return result;\n    }\n    search(k) {\n        if (this.isDone) {\n            return;\n        }\n        if (this.header.right === this.header) {\n            this.handleSolution(this.answer);\n        }\n        else {\n            let c = this.selectColumnNodeHeuristic();\n            c.cover();\n            for (let r = c.bottom; r !== c; r = r.bottom) {\n                this.answer.push(r);\n                for (let j = r.right; j !== r; j = j.right) {\n                    j.column.cover();\n                }\n                this.search(k + 1);\n                r = this.answer.splice(this.answer.length - 1, 1)[0];\n                c = r.column;\n                for (let j = r.left; j !== r; j = j.left) {\n                    j.column.uncover();\n                }\n            }\n            c.uncover();\n        }\n    }\n    runSolver(cb) {\n        this.answer = [];\n        this.isDone = false;\n        this.resultCallback = cb;\n        this.search(0);\n    }\n}\n\n/**!\n * Source https://github.com/donmahallem/js-libs Package: sudoku\n */\nconst getIndex = (row, column, num, boardSize) => {\n    return (row - 1) * boardSize * boardSize + (column - 1) * boardSize + (num - 1);\n};\n\n/**!\n * Source https://github.com/donmahallem/js-libs Package: sudoku\n */\nconst createBoxConstraints = (matrix, header, boardSize, boxSize) => {\n    let headerIter = header;\n    for (let row = COVER_START_IDX; row <= boardSize; row += boxSize) {\n        for (let column = COVER_START_IDX; column <= boardSize; column += boxSize) {\n            for (let n = COVER_START_IDX; n <= boardSize; n++, headerIter++) {\n                for (let rowDelta = 0; rowDelta < boxSize; rowDelta++) {\n                    for (let columnDelta = 0; columnDelta < boxSize; columnDelta++) {\n                        const index = getIndex(row + rowDelta, column + columnDelta, n, boardSize);\n                        matrix[index][headerIter] = true;\n                    }\n                }\n            }\n        }\n    }\n    return headerIter;\n};\n\n/**!\n * Source https://github.com/donmahallem/js-libs Package: sudoku\n */\nconst createCellConstraints = (matrix, header, boardSize) => {\n    let headerIter = header;\n    for (let row = COVER_START_IDX; row <= boardSize; row++) {\n        for (let column = COVER_START_IDX; column <= boardSize; column++, headerIter++) {\n            for (let n = COVER_START_IDX; n <= boardSize; n++) {\n                const index = getIndex(row, column, n, boardSize);\n                // console.log(index, _header, matrix.length);\n                matrix[index][headerIter] = true;\n            }\n        }\n    }\n    return headerIter;\n};\n\n/**!\n * Source https://github.com/donmahallem/js-libs Package: sudoku\n */\nconst createColumnConstraints = (matrix, header, boardSize) => {\n    let iterHeader = header;\n    for (let column = COVER_START_IDX; column <= boardSize; column++) {\n        for (let n = COVER_START_IDX; n <= boardSize; n++, iterHeader++) {\n            for (let row = COVER_START_IDX; row <= boardSize; row++) {\n                const index = getIndex(row, column, n, boardSize);\n                matrix[index][iterHeader] = true;\n            }\n        }\n    }\n    return iterHeader;\n};\n\n/**!\n * Source https://github.com/donmahallem/js-libs Package: sudoku\n */\nconst createRowConstraints = (coverBoard, hBase, boardSize) => {\n    let headerIter = hBase;\n    for (let row = COVER_START_IDX; row <= boardSize; row++) {\n        for (let n = COVER_START_IDX; n <= boardSize; n++, headerIter++) {\n            for (let column = COVER_START_IDX; column <= boardSize; column++) {\n                const index = getIndex(row, column, n, boardSize);\n                coverBoard[index][headerIter] = true;\n            }\n        }\n    }\n    return headerIter;\n};\n\n/**!\n * Source https://github.com/donmahallem/js-libs Package: sudoku\n */\nconst createCoverMatrix = (boardSize, boxSize) => {\n    const coverMatrix = new Array(boardSize * boardSize * boardSize)\n        .fill([])\n        .map(() => new Array(boardSize * boardSize * CONSTRAINTS).fill(false));\n    let header = 0;\n    header = createCellConstraints(coverMatrix, header, boardSize);\n    header = createRowConstraints(coverMatrix, header, boardSize);\n    header = createColumnConstraints(coverMatrix, header, boardSize);\n    createBoxConstraints(coverMatrix, header, boardSize, boxSize);\n    return coverMatrix;\n};\n\n/**!\n * Source https://github.com/donmahallem/js-libs Package: sudoku\n */\nconst initializeExactCoverBoard = (board, boardSize, boxSize) => {\n    const coverBoard = createCoverMatrix(boardSize, boxSize);\n    for (let row = COVER_START_IDX; row <= boardSize; row++) {\n        for (let column = COVER_START_IDX; column <= boardSize; column++) {\n            const n = board[row - 1][column - 1];\n            if (n !== EMPTY_CELL) {\n                for (let num = CELL_VALUE_MIN; num <= boardSize; num++) {\n                    if (num !== n) {\n                        coverBoard[getIndex(row, column, num, boardSize)].fill(false);\n                    }\n                }\n            }\n        }\n    }\n    return coverBoard;\n};\n\n/**!\n * Source https://github.com/donmahallem/js-libs Package: sudoku\n */\nconst solve$1 = (board, boardSize, boxSize, cb) => {\n    const cover = initializeExactCoverBoard(board, boardSize, boxSize);\n    const dlx = new DLX(cover, boardSize);\n    dlx.runSolver(cb);\n};\nconst solveNum = (board, boardSize, boxSize, num) => {\n    const results = [];\n    solve$1(board, boardSize, boxSize, (result) => {\n        results.push(result);\n        return results.length >= num;\n    });\n    return results;\n};\n\n/**!\n * Source https://github.com/donmahallem/js-libs Package: sudoku\n */\nconst indexMap = {};\nconst getIndexMap = (boardSize) => {\n    if (!(boardSize in indexMap)) {\n        indexMap[boardSize] = new Array(boardSize ** 2).fill(0).map((val, idx) => idx);\n    }\n    return indexMap[boardSize];\n};\nconst createSudokuBoard = (boardSize, retainPercentage) => {\n    const board = createEmptySudokuBoard(boardSize);\n    const boxSize = Math.sqrt(boardSize);\n    const randomNumbers = new Array(boardSize).fill(0).map((val, idx) => idx + 1)\n        .sort(() => Math.random() - 0.5);\n    for (let i = 0; i < boardSize; i++) {\n        board[i][Math.floor(Math.random() * boardSize)] = randomNumbers[i];\n    }\n    const selectBoard = solveNum(board, boardSize, boxSize, 1)[0];\n    const removeIndexes = getIndexMap(boardSize)\n        .sort(() => Math.random() - 0.5);\n    for (let i = 0; i <= Math.floor(removeIndexes.length * retainPercentage); i++) {\n        const removeX = removeIndexes[i] % boardSize;\n        const removeY = Math.floor(removeIndexes[i] / boardSize);\n        selectBoard[removeX][removeY] = 0;\n    }\n    return selectBoard;\n};\n\nexport { solve as backtrackSolve, createEmptySudokuBoard, createSudokuBoard, solve$1 as knuthSolve, solveNum as knuthSolveNum };\n// BUILD: Tue Feb 23 2021 09:46:03 GMT+0000 (Coordinated Universal Time)\n\n//# sourceMappingURL=index.js.map\n","/*!\n * Source https://github.com/spielhalle/spielhalle Package: @spielhalle/client\n */\n\nexport enum SudokuBenchmarkMessageType {\n    STARTING = 0,\n    RESULT = 1,\n    PROGRESS = 2,\n}\nexport type SudokuBenchmarkMessage = {\n    boardSize: number;\n    type: SudokuBenchmarkMessageType.STARTING;\n} | {\n    board: number[][],\n    boardSize: number;\n    results: number;\n    time: number;\n    type: SudokuBenchmarkMessageType.PROGRESS;\n} | {\n    boardSize: number;\n    results: number;\n    time: number;\n    type: SudokuBenchmarkMessageType.RESULT;\n};\n","/*!\n * Source https://github.com/spielhalle/spielhalle Package: @spielhalle/client\n */\n/// <reference lib='webworker' />\nimport { knuthSolve } from '@donmahallem/sudoku';\nimport { SudokuBenchmarkMessage, SudokuBenchmarkMessageType } from './sudoku-benchmark-message';\n\nconst reportStatus = (status: SudokuBenchmarkMessage): void => {\n    self.postMessage(status);\n};\naddEventListener('message', (evt: MessageEvent): void => {\n    const size: number = evt.data || 9;\n    reportStatus({\n        boardSize: size,\n        type: SudokuBenchmarkMessageType.STARTING,\n    });\n    const startTime: number = Date.now();\n    let results: number = 0;\n    let lastResult: number = 0;\n    knuthSolve(new Array(size)\n        .fill(0)\n        .map((): number[] => new Array<number>(size).fill(0)), size, Math.sqrt(size), (board: number[][]): boolean => {\n            results += 1;\n            const tDelta: number = Date.now() - startTime;\n            if (tDelta - lastResult > 100 || results === 1) {\n                lastResult = tDelta;\n                reportStatus({\n                    board,\n                    boardSize: size,\n                    results,\n                    time: tDelta,\n                    type: SudokuBenchmarkMessageType.PROGRESS,\n                });\n            }\n            return false;\n        });\n    const endTime: number = Date.now();\n    reportStatus({\n        boardSize: size,\n        results,\n        time: endTime - startTime,\n        type: SudokuBenchmarkMessageType.RESULT,\n    });\n});\n"]}